@model Pokemon_Capstone.Models.UserPO
@using Pokemon_Capstone.Models
@{
    ViewBag.Title = "Profile";
}
<body style="background-image: url('/Images/Background Images/PokemonUserProfile.jpg'); background-repeat: no-repeat; position: center; background-size: cover; background-attachment: fixed">
    <h2 style="color: yellow; text-shadow: 2px 1px Blue; font-family: 'Pokemon Solid'">Your Profile</h2>
    @using (Html.BeginForm())
    {

        <div class="form-horizontal col-md-offset-2 col-md-6 col-md-push-1" style="background-color: dimgrey; border-radius: 5px; opacity: .9; padding: 5px">
            <div class="form-group">
                @Html.LabelFor(model => model.Username, htmlAttributes: new { @class = "control-label col-md-2", @style = "text-shadow: 1px 1px blue; color: yellow" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-control", @disabled = " ", @style = "opacity: .9" } })
                    @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2", @style = "text-shadow: 1px 1px blue; color: yellow" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", @Type = "Password", @disabled = " ", @style = "opacity: .9" } })
                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2", @style = "text-shadow: 1px 1px blue; color: yellow" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control", @disabled = " ", @style = "opacity: .9" } })
                    @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2", @style = "text-shadow: 1px 1px blue; color: yellow" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control", @disabled = " ", @style = "opacity: .9" } })
                    @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2", @style = "text-shadow: 1px 1px blue; color: yellow" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", @disabled = " ", @style = "opacity: .9" } })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.FavoritePokemon, htmlAttributes: new { @class = "control-label col-md-2", @style = "text-shadow: 1px 1px blue; color: yellow" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.FavoritePokemon, new { htmlAttributes = new { @class = "form-control", @disabled = " ", @style = "opacity: .9" } })
                    @Html.ValidationMessageFor(model => model.FavoritePokemon, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.FavoriteType, htmlAttributes: new { @class = "control-label col-md-2", @style = "text-shadow: 1px 1px blue; color: yellow" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.FavoriteType, new { htmlAttributes = new { @class = "form-control", @disabled = " ", @style = "opacity: .9" } })
                    @Html.ValidationMessageFor(model => model.FavoriteType, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.GroupOneName, htmlAttributes: new { @class = "control-label col-md-2", @style = "text-shadow: 1px 1px blue; color: yellow" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.GroupOneName, new { htmlAttributes = new { @class = "form-control", @disabled = " " }, @style = "opacity: .9" })
                    @Html.ValidationMessageFor(model => model.GroupOneName, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.GroupTwoName, htmlAttributes: new { @class = "control-label col-md-2", @style = "text-shadow: 1px 1px blue; color: yellow" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.GroupTwoName, new { htmlAttributes = new { @class = "form-control", @disabled = " ", @style = "opacity: .9" } })
                    @Html.ValidationMessageFor(model => model.GroupTwoName, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.GroupThreeName, htmlAttributes: new { @class = "control-label col-md-2", @style = "text-shadow: 1px 1px blue; color: yellow" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.GroupThreeName, new { htmlAttributes = new { @class = "form-control", @disabled = " ", @style = "opacity: .9" } })
                    @Html.ValidationMessageFor(model => model.GroupThreeName, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.RoleName, htmlAttributes: new { @class = "control-label col-md-2", @style = "text-shadow: 1px 1px blue; color: yellow" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.RoleName, new { htmlAttributes = new { @class = "form-control disabled", @disabled = " ", @style = "opacity: .9" } })
                    @Html.ValidationMessageFor(model => model.RoleName, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    @Html.ActionLink("Update Your Profile", "Alter", "User", new { area = "" }, new { @class = " btn btn-default", @style = "font-family: pokemon solid; color: yellow; background-color: black; text-shadow: 1px 1px blue" })
                    @if ((int)Session["RoleID"] != 1)
                    {
                        @Html.ActionLink("View Users", "ViewUsers", "User", new { area = "" }, new { @class = " btn btn-default", @style = "font-family: pokemon solid; color: yellow; background-color: black; text-shadow: 1px 1px blue" })
                    }
                </div>
            </div>
        </div>
    }
</body>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>